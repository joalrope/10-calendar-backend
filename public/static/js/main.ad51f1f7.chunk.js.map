{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/userForm.js","components/auth/LoginScreen.jsx","components/calendar/CalendarEvent.jsx","components/ui/NavBar.jsx","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initialState","checking","modalOpen","loading","events","activeEvent","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","login","user","checkingFinish","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","msg","uid","setItem","Date","getTime","Swal","fire","placeholder","onChange","userName","CalendarEvent","title","NavBar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","startDate","setStartDate","endDate","setEndDate","validTitle","setValidTitle","validEndDate","setValidEndDate","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_ud","eventStartAddNew","minDate","onFocus","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","redirectTo","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad51f1f7.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    authcheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authlogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authlogout: '[auth] Logout',\r\n\r\n\r\n    uiOpenModal: '[UI] Open modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventStartAddNew: '[event Start add new',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Loaded events',\r\n    eventLogout: '[event] Lougout event',\r\n\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n\r\n}\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    \r\n    switch (action.type) {\r\n        case types.authlogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authcheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authlogout:\r\n            return {\r\n                state: undefined,\r\n             }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n    loading: false,\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case  types.eventAddNew :\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }  \r\n            \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                    ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; \r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    );\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    \r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST' );\r\n            const body = await resp.json();\r\n        \r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _ud: uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventClearActiveEvent = () => ({ \r\n    type: types.eventClearActiveEvent \r\n});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok) {\r\n                \r\n                dispatch(eventUpdated(event));\r\n\r\n            } else {\r\n                Swal.fire('Advertencia', body.msg, 'warning');\r\n                console.log(body.msg);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = (event) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n\r\n            const resp = await fetchWithToken(`events/${id}`, {} , 'DELETE');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok) {\r\n                \r\n                dispatch(eventDeleted());\r\n\r\n            } else {\r\n                Swal.fire('Advertencia', body.msg, 'warning');\r\n                console.log(body.msg);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }        \r\n    }\r\n}\r\n\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.events);\r\n\r\n             dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n} \r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n}) \r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout,\r\n}) ","import Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { eventLogout } from './events';\r\n\r\n\r\nexport const startLogin = (email, password) => { \r\n\r\n    return async (dispatch) => {\r\n        \r\n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const {ok, msg, token, uid, name} = await resp.json();\r\n\r\n        if (ok) {\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid,\r\n                name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error', msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (name, email, password) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        const resp = await fetchWithoutToken('auth/new', {name, email, password}, 'POST');\r\n        const {ok, msg, token, uid, name: userName} = await resp.json();\r\n\r\n\r\n        if (ok) {\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid,\r\n                userName\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error', msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    \r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const {ok, token, uid, name} = await resp.json();\r\n\r\n        if (ok) {\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid,\r\n                name\r\n            }));\r\n\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) =>{\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout())\r\n    }\r\n}\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authlogin,\r\n    payload: user\r\n})\r\n\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authcheckingFinish\r\n})\r\n\r\n\r\nconst logout = () => ({\r\n    type: types.authlogout\r\n})","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/userForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'joalrope@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    \r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Joalrope Hotmail',\r\n        rEmail: 'joalrope@hotmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseas deben ser iguales', 'error')\r\n        }\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value= {lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark\">\r\n            <span className=\"navbar-brand\">\r\n                 {name}\r\n            </span>\r\n            \r\n            <button className=\"btn btn-sm btn-outline-danger mr-5\" onClick={handleLogout}>\r\n                <i className='fas fa-sign-out-alt '></i>\r\n                <span> Salir</span>\r\n            </button>            \r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`,\r\n};","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})\r\n\r\nexport const uiStartLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\n\r\nexport const uiFinishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [startDate, setStartDate] = useState(now.toDate());\r\n    const [endDate, setEndDate] = useState(nowPlus1.toDate());\r\n    const [validTitle, setValidTitle] = useState(true);\r\n    const [validEndDate, setValidEndDate] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues(activeEvent) ;\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleTitleInputFocus = () => {\r\n        setValidTitle(true);\r\n    }\r\n\r\n    const handleEndDateInputFocus = () => {\r\n        setValidEndDate(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent() );  //Limpia el evento activo\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            setValidEndDate(false);\r\n        }\r\n        \r\n        if (title.trim().length < 2 ) {\r\n            setValidTitle(false);\r\n        }\r\n\r\n        // TODO Realizar guardar datos en bd\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setValidTitle(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS= {200}\r\n          className= 'modal'\r\n          overlayClassName= 'modal-fondo'\r\n        >\r\n            <h3> {(activeEvent) ?' Editar Evento' : 'Nuevo evento'} </h3>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={startDate}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={endDate}\r\n                        minDate={startDate}\r\n                        className={`form-control ${!validEndDate && 'is-invalid'}`}\r\n                        onFocus= {handleEndDateInputFocus}\r\n                        id=\"validEndDate\"\r\n                    />\r\n                    <div id=\"validEndDate\" className=\"invalid-feedback\">\r\n                        La fecha y hora fin debe ser mayor a la fecha y hora inicio.\r\n                    </div>\r\n                </div>\r\n                {validEndDate && <hr />}\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!validTitle && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value= {title}\r\n                        onChange={handleInputChange}\r\n                        onFocus= {handleTitleInputFocus}\r\n                        // id=\"validTitle\"\r\n                    />\r\n                    <small id=\"validTitle\" className=\"invalid-feedback\">\r\n                        Por favor indique una descripcion corta al titulo del evento.\r\n                    </small>\r\n                    { validTitle && <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    const handleBtnAddNewClick = () => {\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleBtnAddNewClick} >\r\n           <div className=\"fnab\">\r\n               <i className=\"fas fa-calendar-plus\"></i>\r\n           </div>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const handleBtnDeleteClick = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    \r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleBtnDeleteClick} >\r\n           <div className=\"fnab\">\r\n               <i className=\"fas fa-trash\"></i>\r\n               <span> Eliminar Evento</span>\r\n           </div>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n        \r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastview') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastview', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventPropGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor: (isSelected) ? '#c94c4c' :((uid === event.user._id) ? '#50394c' : '#c1502e'),\r\n            borderRadius: '0px',\r\n            opacity:(isSelected) ? 1 : 0.75,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n          <NavBar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages= {messages}\r\n                eventPropGetter={eventPropGetter}\r\n                onDoubleClickEvent= {onDoubleClick}\r\n                onSelectEvent= {onSelectEvent}\r\n                onView= {onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view= {lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (!!activeEvent) && <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    redirectTo,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to= {redirectTo} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n    redirectTo: PropTypes.string.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    redirectTo,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to= {redirectTo} />\r\n                    : <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n    redirectTo: PropTypes.string.isRequired\r\n}\r\n","import React, {useEffect}  from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\" \r\n                        component= {LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                        redirectTo= \"/\"\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component= {CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                        redirectTo=\"/login\"\r\n                    />\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Provider store={store}>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles.css'\r\n\r\n\r\nReactDOM.render(\r\n    <CalendarApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}